const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const mongoose = require('mongoose');

const app = express();
const port = process.env.PORT || 5000;

// Middleware
app.use(cors());
app.use(bodyParser.json());

// Connect to MongoDB
const dbURI = 'mongodb://localhost:27017/expense-tracker'; // Change this URI if using a remote MongoDB server
mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => console.log('Connected to MongoDB'))
  .catch(err => console.error('Error connecting to MongoDB:', err));

// Define the expense schema
const expenseSchema = new mongoose.Schema({
  description: String,
  amount: Number,
  date: Date
});

const Expense = mongoose.model('Expense', expenseSchema);

// Routes
app.get('/api/expenses', async (req, res) => {
  try {
    const expenses = await Expense.find();
    res.json(expenses);
  } catch (err) {
    res.status(500).json({ message: err.message });
  }
});

app.post('/api/expenses', async (req, res) => {
  const { description, amount, date } = req.body;

  try {
    const newExpense = new Expense({ description, amount, date });
    await newExpense.save();
    res.status(201).json(newExpense);
  } catch (err) {
    res.status(400).json({ message: err.message });
  }
});

// Start the server
app.listen(port, () => {
  console.log(`Server running on port ${port}`);
});



APP.js

import React, { useState, useEffect } from 'react';
import axios from 'axios';

const App = () => {
  const [expenses, setExpenses] = useState([]);
  const [description, setDescription] = useState('');
  const [amount, setAmount] = useState('');
  const [date, setDate] = useState('');

  useEffect(() => {
    fetchExpenses();
  }, []);

  const fetchExpenses = async () => {
    try {
      const response = await axios.get('/api/expenses');
      setExpenses(response.data);
    } catch (error) {
      console.error('Error fetching expenses:', error);
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await axios.post('/api/expenses', { description, amount, date });
      setDescription('');
      setAmount('');
      setDate('');
      fetchExpenses();
    } catch (error) {
      console.error('Error creating expense:', error);
    }
  };

  return (
    <div>
      <h1>Expense Tracker</h1>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          value={description}
          onChange={(e) => setDescription(e.target.value)}
          placeholder="Description"
        />
        <input
          type="number"
          value={amount}
          onChange={(e) => setAmount(e.target.value)}
          placeholder="Amount"
        />
        <input
          type="date"
          value={date}
          onChange={(e) => setDate(e.target.value)}
        />
        <button type="submit">Add Expense</button>
      </form>
      <ul>
        {expenses.map((expense) => (
          <li key={expense._id}>
            {expense.description} - ${expense.amount} - {expense.date}
          </li>
        ))}
      </ul>
    </div>
  );
};

export default App;


PACKAGE.JSON

{
  "name": "expense-tracker",
  "version": "1.0.0",
  "description": "Expense Tracker Application",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "client": "cd client && npm start"
  },
  "author": "Your Name",
  "license": "ISC"
}



